{
  DocumentBuilderFactory docFactory=DocumentBuilderFactory.newInstance();
  DocumentBuilder docBuilder=null;
  try {
    docBuilder=docFactory.newDocumentBuilder();
    org.w3c.dom.Document doc=docBuilder.parse(destFile.getAbsolutePath());
    org.w3c.dom.Element rootElement=doc.getDocumentElement();
    NamedNodeMap rootAttrs=rootElement.getAttributes();
    rootAttrs.getNamedItem("android:width").setTextContent(model.getDp());
    rootAttrs.getNamedItem("android:height").setTextContent(model.getDp());
    String viewportSize=model.getViewportSize();
    if (viewportSize != null) {
      rootAttrs.getNamedItem("android:viewportWidth").setTextContent(viewportSize);
      rootAttrs.getNamedItem("android:viewportHeight").setTextContent(viewportSize);
    }
    NodeList nodeList=rootElement.getElementsByTagName("path");
    for (int i=0, size=nodeList.getLength(); i < size; i++) {
      NamedNodeMap pathAttrs=nodeList.item(i).getAttributes();
      if (pathAttrs != null) {
        Node node=pathAttrs.getNamedItem("android:fillColor");
        if (node != null)         node.setTextContent(model.getColorCode());
      }
    }
    TransformerFactory transformerFactory=TransformerFactory.newInstance();
    Transformer transformer=transformerFactory.newTransformer();
    StreamResult result=new StreamResult(destFile);
    transformer.transform(new DOMSource(doc),result);
  }
 catch (  ParserConfigurationException e) {
    e.printStackTrace();
  }
catch (  SAXException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
catch (  TransformerConfigurationException e) {
    e.printStackTrace();
  }
catch (  TransformerException e) {
    e.printStackTrace();
  }
}
