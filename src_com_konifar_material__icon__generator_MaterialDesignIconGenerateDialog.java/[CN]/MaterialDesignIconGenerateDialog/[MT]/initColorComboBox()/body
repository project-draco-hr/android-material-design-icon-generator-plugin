{
  Document doc;
  try {
    File templateFile=getLocalFile(COLOR_PALETTE_COMBOBOX_XML);
    doc=JDOMUtil.loadDocument(templateFile);
    List<Element> elements=doc.getRootElement().getChildren();
    comboBoxColor.removeAllItems();
    comboBoxColor.addItem(" ");
    for (    org.jdom.Element element : elements) {
      String key=element.getAttributeValue("id");
      paletteMap.put(key,element.getText());
      comboBoxColor.addItem(key);
    }
  }
 catch (  JDOMException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  comboBoxColor.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      String value=paletteMap.get((String)comboBoxColor.getSelectedItem());
      textFieldCustomColor.setText(value);
    }
  }
);
  comboBoxColor.getAccessibleContext().addPropertyChangeListener(new PropertyChangeListener(){
    public void propertyChange(    PropertyChangeEvent event){
      if (AccessibleContext.ACCESSIBLE_STATE_PROPERTY.equals(event.getPropertyName()) && AccessibleState.FOCUSED.equals(event.getNewValue()) && comboBoxColor.getAccessibleContext().getAccessibleChild(0) instanceof ComboPopup) {
        ComboPopup popup=(ComboPopup)comboBoxColor.getAccessibleContext().getAccessibleChild(0);
        JList list=popup.getList();
        comboBoxColor.setSelectedItem(String.valueOf(list.getSelectedValue()));
      }
    }
  }
);
  comboBoxColor.setSelectedIndex(0);
}
